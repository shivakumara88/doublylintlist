class Node:
    def __init__(self,data=None):
        self.data = data
        self.next = None
        self.prev = None
class doublyLinkedList:
    def __init__(self):
        self.head = None
    def insert_at_begin(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
        else:
            self.head.prev = new_node
            new_node.next = self.head
            self.head = new_node
    def delete_at_begin(self):
        if self.head is None:
            print("list is empaty")
            return
        elif self.head.next is None:
           self.head = None
        else:
            self.head = self.head.next
            self.head.prev = None
            
    def print_list(self):
        if self.head is None:
            print("list is empaty")
            return
        curr = Node()
        curr = self.head
        
        while(curr !=None):
            print(curr.data)
            curr = curr.next
        print()
obj= doublyLinkedList()
obj.insert_at_begin(10)
obj.insert_at_begin(20)
obj.insert_at_begin(30)


print("List after intresting node at begining:")
obj.print_list()

obj.delete_at_begin()
print("List after deleting node frome begining")
obj.print_list()
obj.delete_at_begin()
obj.delete_at_begin()
obj.delete_at_begin()
print("linked list after deleting")
obj.print_list()
